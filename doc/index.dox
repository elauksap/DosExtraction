/**
 * @mainpage Index
 *
 * @section intro Introduction
 *
 * This program allows to extract the Density of States, assessed by mean capacitance-voltage measurements,
 * in an organic semiconductor device. Simulated values are fitted to experimental data.
 * Source files and headers are written in C++11 language.
 * The software is intended to be used on a UNIX operating system.
 *
 * @section dependancies Dependancies
 * 
 * The program requires the following libraries to be installed on your system:
 * 
 * @arg <a href="http://eigen.tuxfamily.org"><b>Eigen</b></a>, to handle with matrices, vectors and linear algebra;
 * @arg <a href="http://getpot.sourceforge.net"><b>GetPot</b></a>, to parse command-line and configuration files;
 * @arg <a href="http://www.gnuplot.info"><b>Gnuplot</b></a>, a graphical utility to generate plots;
 * its interface to C++ also requires:
 * @arg <a href="http://www.boost.org"><b>Boost</b></a>, a C++ library;
 * @arg <a href="http://openmp.org"><b>OpenMP</b></a>, for parallel computing (recommended but not compulsory).
 * 
 * @section install_sec Compile
 * 
 * In order to compile a test executable, simply execute one of these commands
 * in a terminal pointing the root directory:
 * 
 * \code
 *     $ make
 * \endcode
 * 
 * or, if you want the compiler to produce debugging informations:
 * 
 * \code
 *     $ make debug
 * \endcode
 * 
 * You can specify the name of the test to be compiled (without extension, for example: @a simulate_dos)
 * by passing the variable @b NAME through command-line:
 * 
 * \code
 *     $ make NAME=test_filename
 * \endcode
 * 
 * The compiler will generate the @a test_filename executable under the @a bin/ directory. @n
 * Repeat these instructions for each test you want to compile.
 * 
 * @section configure Set up the configuration file
 * 
 * @warning each file described in this section must be placed under the @a config/ directory.
 * 
 * Before you can an executable, you have to set up the configuration file, called @a config.pot.
 * Within it, you can find a list of parameters, each of which is commented out to explain what
 * modifying it will entail. @n
 * Particularly, you can set the variables @a input_params and @a input_experim, i.e. the filenames
 * where to find input fitting parameters and experimental data respectively.
 * It's recommended (but not compulsory) to put these files in the same directory as the configuration
 * file (otherwise you can specify a relative or absolute path to them). @n
 * @n
 * You can create multiple configuration files, each with different parameter values: the one you
 * aim to use can be specified in the command-line before running.
 * 
 * @section run Run!
 * 
 * Executables are placed under the @a bin/ directory. @n
 * @n
 * To run by using the default configuration filename (@a config.pot) simply execute in the root:
 * 
 * \code
 *     $ bin/test_filename
 * \endcode
 * 
 * or, if your terminal is already pointing the @a bin/ directory:
 * 
 * \code
 *     $ ./test_filename
 * \endcode
 * 
 * To specify a different configuration file previously saved in the @a config/ directory:
 * 
 * \code
 *     $ bin/test_filename -f configuration_filename
 * \endcode
 * 
 * or:
 * 
 * \code
 *     $ bin/test_filename --file configuration_filename
 * \endcode
 * 
 * Once complete, you can find the results of the simulation(s) in the output directory specified in
 * the configuration file (default: @a output/) under @a bin/.
 * 
 */ 
